[BUGFIX] Repository should default to respect sorting
If a model has sorting the repository should respect it.
Set the defaultOrderings-property.
Resolves: #49579
[BUGFIX] Add 'foreign_sortby' for relations to records with sorting
If 'foreign_sortby' is set related records are sorted correctly
upon fetching.
Resolves: #68694
[TASK] Remove target selector in 6.2
Resolves #60741
[TASK] Fix small css bugs
Resolves: #68034
[TASK] Enable renaming of vendor name
Resolves: #44624
[TASK] Add client side validator
Resolves: #59379
[FEATURE] Confirm overwrite
Resolves: #67232
[BUGFIX] css adaptions for sorting arrows
Make relations sortable
Resolves: #68689
[BUGFIX] Make ConfigurationViewHelper 6.2 compatibel
Resolves: #70676
[TASK] Refactoring to reduce dependencies
[TASK] Rename boolean and integer type hints
Resolves: #58230
[TASK] Add a warning if mapping to TYPO3 tables
Resolves: #69656
[BUGFIX] Follow up to #69635
Resolves: #69635
[TASK] Add version in composer.json
Some minor code cleanups
[FEATURE] Enable optional generation of documentation-template
Resolves: #64502
[BUGFIX] Wrong class name when renaming extension
Resolves: #69635
[TASK] Prepend Vendor name in registerPlugin
Resolves: #69613
[TASK] Update documentation template
[TASK] Restriction to version 6.2.*
Since we have 2 separate branches now, the 6.2 branch
is restricted to 6.2
[TASK] Add composer.json
[TASK] Remove deprecated methods in BE ConfigurationViewHelper
[TASK] Typoscript configuration per plugin and per module
!! Can be a breaking change, since typoscript configuration
is based on extkey_pluginkey now.
Resolves: #62105
[BUGFIX] Set allowed file types in file with max items > 1
Resolves: #62115
[TASK] Upgrade PhpParser API
The php-parser has a branch 1.x which includes various bugfixes
and namespaced classes. This commit makes the Parser API compatible
with the 1.x branch
Preparation for #68226
Fixes: #68227
Fix compatibility test
[BUGFIX] Generate correct TCA for files
Resolves: #61764
[TASK] Update htaccess.t to be Apache 2.4 compatible
[TASK] Generate newer TCA structure
The new structure is used in core and should be generated by the
ExtensionBuilder as well.
Resolves: #59445
[BUGFIX] Don't add relation field to sys_file_reference
Resolves: #62117
[TASK] Don't generate unneeded files
Resolves: #64837
[TASK] Remove parameter from newAction
Resolves: #59697
[BUGFIX] Avoid wrong warning label
Resolves: #66409
[BUGFIX] distribution and example category were mixed up
Resolves: #66069
[TASK] Remove legacy Typoscript
Resolves: #62106
[BUGFIX] 7.x requires ArrayUtility::mergeRecursiveWithOverrule
some classes still used GeneralUtility::array_merge_recursive_overrule which has been removed with 7.x
Resolves: #65756
[BUGFIX] Cannot render manual as PDF
Resolves: #66303
[TASK] Add reference to split token in settings.yaml
Resolves: #60854
[TASK] Avoid using deprecated $GLOBALS['typo3CacheManager']
Resolves: #65752
[TASK] Adapt wizard configuration
Resolves: #63130
[TASK] Rename deprecated functions
Resolves: #65751
[TASK] Drop custom ViewHelper be.container
That ViewHelper only existed because of a missing parameter
includeCsh. This is available in EXT:fluid as of TYPO3 CMS 6.2.2.
Resolves: #64500
[TASK] Compatibility for 7.0 & 7.1
Fix some css issues, add icon which is not available
anymore, raise dependencies in ext_emconf.php and
avoid fatal errors when calling removed functions
Resolves: #64205
[BUGFIX] Remove leading backslashes from class names
When creating new instances with
`GeneralUtility::makeInstance($className)` or fetching objects with
`ObjectManager->get($className)`, the given className must not start
with leading backslashes.
Resolves: #64206
[BUGFIX] Doc-generation: Use makeInstance without leading slash
The generated documentation has an example of makeInstance
where the namespaced classname starts with a leading slash.
While that technically works, it's recommended to not use
a leading slash.
Resolves: #64932
[BUGFIX] Generate correct TCA for images
Resolves: #60268
[TASK] Enable roundtrip-mode by default
Resolves: #62096
[BUGFIX] FollowUp fixing all unit tests again
First bugfix was based on wrong assumption, YAML
Parser was not the problem, but missing condition
in CLassBuilder
Additionally some small fixes in unit tests
Resolves: #63822
[BUGFIX] File-property: Wrong TCA for "all extensions allowed"
Resolves: #61765
[BUGFIX] Evaluate setDefaultValuesForClassProperties setting
The YAML parser does not set the value to FALSE but to NULL,
if the value is configured as false.
So the condition has to be changed.
Resolves: #63822
[BUGFIX] Add RTE configuration in ext_tables.php
Resolves: #59860
[BUGFIX] Escape dashes in regex character classes
Resolves: #61852
[TASK] Add csh label includes
This is for objects which are "mappedToExistingTable".
Resolves: #58888
[BUGFIX] Adjust styles for EB-logo in BE
Remove inline-styles as the default-style
is "okay" for a simple name as a "logo".
Resolves: #60478
[BUGFIX] Add item for default record type
Resolves: #58887
[BUGFIX] Don't add hidden field if it is not enabled
Resolves: #59416
[TASK] Force plugin-keys to lowercase as well
Key for frontend-plugins / backend-modules are
used in lowercase already. But so far the
EB-backend allowed them to be entered in mixed
case.
Resolves: #60476
[BUGFIX] Wrong condition in getFirstLineOfMethodBody
The mthod name was misspelled also

git log 2e03533e..HEAD --pretty=format:"%s%n%b%n" | grep -v "^$" | grep -v "Tested-by\|Reviewed-by\|Change-Id\|Reviewed-on\|Release" > ChangeLog